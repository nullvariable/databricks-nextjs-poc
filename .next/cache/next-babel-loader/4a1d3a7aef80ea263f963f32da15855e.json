{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/omers/projects/pantheon/nextjs-poc-master/pages/p/[name].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport { Base64 } from 'js-base64';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.webinar.title.rendered), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.webinar.content.rendered));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var login, password, id, res, webinar;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          login = 'databricks';\n          password = 'BigDataSimple';\n          console.log(context);\n          id = context.query.id;\n          console.log(\"id:\".concat(id));\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"https://databricks.com/wp-json/wp/v2/webinarlist/\".concat(id), {\n            headers: {\n              \"Authorization\": \"Basic \".concat(Base64.encode(\"\".concat(login, \":\").concat(password)))\n            }\n          }));\n\n        case 7:\n          res = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 10:\n          webinar = _context.sent;\n          return _context.abrupt(\"return\", {\n            webinar: webinar\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/omers/projects/pantheon/nextjs-poc-master/pages/p/[name].js"],"names":["useRouter","Layout","Base64","fetch","Post","props","webinar","title","rendered","content","getInitialProps","context","login","password","console","log","id","query","headers","encode","res","json"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBC,QAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACC,OAAN,CAAcG,OAAd,CAAsBD,QAA1B,CAFF,CADgB;AAAA,CAAlB;;AAOAJ,IAAI,CAACM,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,KADe,GACP,YADO;AAEfC,UAAAA,QAFe,GAEJ,eAFI;AAGrBC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACQK,UAAAA,EAJa,GAINL,OAAO,CAACM,KAJF,CAIbD,EAJa;AAKrBF,UAAAA,OAAO,CAACC,GAAR,cAAkBC,EAAlB;AALqB;AAAA,2CAMHb,KAAK,4DAAqDa,EAArD,GAA2D;AAChFE,YAAAA,OAAO,EAAE;AACP,+CAA0BhB,MAAM,CAACiB,MAAP,WAAiBP,KAAjB,cAA0BC,QAA1B,EAA1B;AADO;AADuE,WAA3D,CANF;;AAAA;AAMfO,UAAAA,GANe;AAAA;AAAA,2CAWCA,GAAG,CAACC,IAAJ,EAXD;;AAAA;AAWff,UAAAA,OAXe;AAAA,2CAad;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAgBA,eAAeF,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport { Base64 } from 'js-base64';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.webinar.title.rendered}</h1>\n    <p>{props.webinar.content.rendered}</p>\n  </Layout>\n)\n\nPost.getInitialProps = async function(context) {\n  const login = 'databricks';\n  const password = 'BigDataSimple';\n  console.log(context);\n  const { id } = context.query;\n  console.log(`id:${id}`);\n  const res = await fetch(`https://databricks.com/wp-json/wp/v2/webinarlist/${id}`, {\n    headers: {\n      \"Authorization\": `Basic ${Base64.encode(`${login}:${password}`)}`\n    },\n  });\n  const webinar = await res.json();\n\n  return { webinar };\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}